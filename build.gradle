buildscript {
    repositories {
        maven {
            credentials {
                username cocktailRepositoryUserName
                password cocktailRepositoryPassword
            }
            url cocktailRepositoryUrl
        }
	    maven { url 'https://repo.spring.io/libs-milestone' }
    }    

    ext {
	    springBootVersion = '2.0.0.M7'
    }
    
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
  id "io.spring.dependency-management" version "1.0.4.RELEASE" apply false
  id "nebula.maven-publish" version "5.1.0" apply false
  id "org.sonarqube" version "2.6.1" apply false
}

subprojects {
    repositories {
        maven {
            credentials {
                username cocktailRepositoryUserName
                password cocktailRepositoryPassword
            }
            url cocktailRepositoryUrl
        }
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        mavenLocal()
    }

    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

project(':app-gfc-services') {
	apply plugin: 'war'
	apply plugin: 'nebula.maven-publish'
	apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    group = 'cocktail.application'

	dependencies {
        compile 'org.springframework.boot:spring-boot-starter'
        compile 'org.springframework.boot:spring-boot-starter-web'
        compile 'org.springframework.boot:spring-boot-starter-actuator'
        compile 'org.springframework.boot:spring-boot-starter-tomcat'

	    testCompile 'org.springframework.boot:spring-boot-starter-test'
    }

    publishing {
        repositories {
            maven {
                url cocktailPublishRepositoryUrl
                credentials {
                    username nexusDevUserName
                    password nexusDevPassword
                }  
            }
        }
    }

    task uploadArchives(dependsOn: publish)

}

// Tâche gradle factice qui permet de ne pas faire échouer la chaine d'intégration continue
// Jenkins délenche pour chaque job l'appel a build packagewoapplication uploadArchives
task packagewoapplication
task overrideVersionNew
task overrideLibsVersion

