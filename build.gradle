buildscript {
    repositories {
        maven {
            credentials {
                username cocktailRepositoryUserName
                password cocktailRepositoryPassword
            }
            url cocktailRepositoryUrl
        }
	    maven { url 'https://repo.spring.io/libs-milestone' }
    }    

    ext {
	    springBootVersion = '2.0.0.M7'
    }
    
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
  id "io.spring.dependency-management" version "1.0.4.RELEASE" apply false
  id "org.sonarqube" version "2.6.1"
  id "nebula.maven-publish" version "5.1.0" apply false
  id "com.gorylenko.gradle-git-properties" version "1.4.17" apply false
}

allprojects {
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        mavenLocal()
        maven {
            credentials {
                username nexusDevUserName
                password nexusDevPassword
            }
            url "http://nexus.intra-cocktail.org/content/groups/public/"
        }
    }

    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}


project(':application') {
	apply plugin: 'war'
    apply plugin: 'maven'
	apply plugin: 'nebula.maven-publish'
	apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
	apply plugin: "com.gorylenko.gradle-git-properties"
    apply plugin: 'jacoco'

    def artifactName = rootProject.property('name')
    def artifactVersion = project.property('version')
	bootWar {
        baseName = "${artifactName}"
        manifest {
            attributes('Version': "${artifactVersion}")
        }
    }

	dependencies {
        compile 'org.springframework.boot:spring-boot-starter'
        compile 'org.springframework.boot:spring-boot-starter-web'
        compile 'org.springframework.boot:spring-boot-starter-actuator'
        compile 'org.springframework.boot:spring-boot-starter-tomcat'

	    testCompile 'org.springframework.boot:spring-boot-starter-test'
    }

    uploadArchives {
        repositories.mavenDeployer {
            repository(url: "http://nexus.intra-cocktail.org/content/repositories/cocktail/") {
                authentication(userName: nexusUserName, password: nexusPassword)
            }
            pom.version = artifactVersion
            pom.groupId = 'cocktail.application'
            pom.artifactId = 'gfc-services'
        }
    }

}

configure(subprojects.findAll { it.name.contains('module') }) {

    apply plugin: 'jacoco'

	checkstyle {
		toolVersion '8.1'
		configFile = rootProject.file("config/checkstyle/checkstyle.xml")
	}

	dependencies {
        testCompile 'junit:junit:4.12'
		checkstyle "com.github.sevntu-checkstyle:sevntu-checks:1.24.2"
	}
}

// Tâche gradle factice qui permet de ne pas faire échouer la chaine d'intégration continue
// Jenkins délenche pour chaque job l'appel a build packagewoapplication uploadArchives
task packagewoapplication

